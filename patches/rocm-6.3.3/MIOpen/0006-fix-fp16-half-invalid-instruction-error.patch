From c93d3a4789d3553d218caf5d5722fc9510924134 Mon Sep 17 00:00:00 2001
From: Mika Laitio <lamikr@gmail.com>
Date: Thu, 2 Jan 2025 07:10:23 -0800
Subject: [PATCH 6/6] fix fp16/half invalid instruction error

fix invalid instruction error caused by half/fp16
models with gfx11-cards by disabling the solver
conv_wino_fury_RxS.cpp when using half-precision type
on gfx11-devices.

Error could be triggered by executing pytorch benchmark
with half precision type or by executing test command:
"MIOpenDriver convfp16 -n 4 -c 16 -H 112 -W 112 -k 8 -y 1 -x 1 -p 0 -q 0 -u 1 -v 1 -l 1 -j 1 -m conv -g 1 -F 1 -t 1"

Signed-off-by: Mika Laitio <lamikr@gmail.com>
---
 src/solver/conv_wino_fury_RxS.cpp | 17 ++++++++++++++---
 1 file changed, 14 insertions(+), 3 deletions(-)

diff --git a/src/solver/conv_wino_fury_RxS.cpp b/src/solver/conv_wino_fury_RxS.cpp
index da0136e3b..14cefbc83 100644
--- a/src/solver/conv_wino_fury_RxS.cpp
+++ b/src/solver/conv_wino_fury_RxS.cpp
@@ -199,9 +199,20 @@ bool ConvWinoFuryRxS<Winodata, Winofilter>::IsApplicable(const ExecutionContext&
     // gfx1100/01/02/03/50/51
     if(!(StartsWith(name, "gfx11")))
         return false;
-
-    auto n_groups = ctx.GetStream().GetMaxHardwareComputeUnits();
-    return ShaderModel(problem, n_groups, Winodata, Winofilter).isApplicable();
+    else {
+		if (problem.IsFp32()) {
+			auto n_groups = ctx.GetStream().GetMaxHardwareComputeUnits();
+			return ShaderModel(problem, n_groups, Winodata, Winofilter).isApplicable();
+		}
+		else {
+			// fp16/half models causes invalid instruction error
+			// at least on gfx1102 and gfx1103 on rocm sdk builder 6.1.2
+			// when tested with pytorch_benchmark on half models
+			// or with command
+			// "MIOpenDriver convfp16 -n 4 -c 16 -H 112 -W 112 -k 8 -y 1 -x 1 -p 0 -q 0 -u 1 -v 1 -l 1 -j 1 -m conv -g 1 -F 1 -t 1"
+			return false;
+		}
+	}
 }
 
 template <uint32_t Winodata, uint32_t Winofilter>
-- 
2.43.0

