From 1a6aea4f6022378fcf38ff4db740dacc7064fb2b Mon Sep 17 00:00:00 2001
From: Mika Laitio <lamikr@gmail.com>
Date: Wed, 12 Mar 2025 19:08:18 -0700
Subject: [PATCH 2/3] COMPILE and LINK JOB count for out of memory error fix

Signed-off-by: Mika Laitio <lamikr@gmail.com>
---
 CMakeLists.txt | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 966c5ccc..c12e6199 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -724,7 +724,13 @@ if(LL128_ENABLED)
 endif()
 
 ## Set RCCL compile options
-target_compile_options(rccl PRIVATE -parallel-jobs=12)
+if(DEFINED LLVM_PARALLEL_COMPILE_JOBS)
+    message(STATUS "LLVM_PARALLEL_COMPILE_JOBS: ${LLVM_PARALLEL_COMPILE_JOBS}")
+    target_compile_options(rccl PRIVATE -parallel-jobs=${LLVM_PARALLEL_COMPILE_JOBS})
+else()
+    message(STATUS "LLVM_PARALLEL_COMPILE_JOBS not set, using 12")
+    target_compile_options(rccl PRIVATE -parallel-jobs=12)
+endif()
 target_compile_options(rccl PRIVATE -Werror=uninitialized -Werror=sometimes-uninitialized)
 target_compile_options(rccl PRIVATE -Wno-format-nonliteral)
 target_compile_options(rccl PRIVATE -fgpu-rdc)               # Generate relocatable device code (required for extern __shared__)
@@ -807,7 +813,14 @@ if (${num_linker_jobs} GREATER_EQUAL "16")
   set(num_linker_jobs "16")
 endif()
 message(STATUS "Use ${num_linker_jobs} jobs for linking")
-target_link_options(rccl PRIVATE -parallel-jobs=${num_linker_jobs})       # Use multiple threads to link
+if(DEFINED LLVM_PARALLEL_LINK_JOBS)
+    message(STATUS "LLVM_PARALLEL_LINK_JOBS: ${LLVM_PARALLEL_LINK_JOBS}")
+    target_link_options(rccl PRIVATE -parallel-jobs=${LLVM_PARALLEL_LINK_JOBS})
+else()
+    message(STATUS "LLVM_PARALLEL_LINK_JOBS not set, using calculated value: ${num_linker_jobs}")
+    target_link_options(rccl PRIVATE -parallel-jobs=${num_linker_jobs})       # Use multiple threads to link
+endif()
+
 if(BUILD_ADDRESS_SANITIZER)
   target_link_options(rccl PRIVATE -fuse-ld=lld)
 endif()
-- 
2.48.1

