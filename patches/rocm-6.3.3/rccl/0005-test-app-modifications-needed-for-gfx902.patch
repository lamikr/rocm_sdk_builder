From e5f0759b53c7b74d608b404eafb4d23a8fe3d413 Mon Sep 17 00:00:00 2001
From: Mika Laitio <lamikr@pilppa.org>
Date: Mon, 11 Nov 2024 21:06:26 -0800
Subject: [PATCH 5/5] test app modifications needed for gfx902

- test app will still hang on kernel launch

Signed-off-by: Mika Laitio <lamikr@pilppa.org>
---
 tools/rccl-prim-test/Makefile           |  2 +-
 tools/rccl-prim-test/rccl_prim_test.cpp | 10 +++++-----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/tools/rccl-prim-test/Makefile b/tools/rccl-prim-test/Makefile
index b220db8..a85e32d 100644
--- a/tools/rccl-prim-test/Makefile
+++ b/tools/rccl-prim-test/Makefile
@@ -3,7 +3,7 @@ HIP_PATH?= $(wildcard /opt/rocm)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
 endif
-HIPCC=$(HIP_PATH)/bin/hipcc
+HIPCC=hipcc
 
 EXE=rccl_prim_test
 CXXFLAGS = -O3 -g -I/opt/rocm/rocrand/include
diff --git a/tools/rccl-prim-test/rccl_prim_test.cpp b/tools/rccl-prim-test/rccl_prim_test.cpp
index 05ea191..04471f8 100644
--- a/tools/rccl-prim-test/rccl_prim_test.cpp
+++ b/tools/rccl-prim-test/rccl_prim_test.cpp
@@ -436,7 +436,7 @@ int main(int argc,char* argv[])
     if (nGpu == 8 && !cr8g) {
       hipDeviceProp_t prop;
       HIPCHECK(hipGetDeviceProperties(&prop, 0));
-      if (strncmp(prop.gcnArchName, "gfx94", 5) == 0) {
+      if (strncmp(prop.gcnArchName, "gfx9", 4) == 0) {
         r = (char *)ring_gfx940_8p;
         if(!workgroups) workgroups = 28;
       } else {
@@ -521,11 +521,11 @@ int main(int argc,char* argv[])
     profiling_data[i] = (struct profiling_data_t *)malloc(sizeof(struct profiling_data_t)*iters);
     HIPCHECK(hipMalloc((void**) &d_profiling_data[i], sizeof(struct profiling_data_t)*iters));
 
-    HIPCHECK(hipExtMallocWithFlags((void**) &transfer_data[i], sizeof(struct transfer_data_t), strncmp(prop.gcnArchName, "gfx94", 5) == 0 ? hipDeviceMallocUncached : hipDeviceMallocFinegrained));
+    HIPCHECK(hipExtMallocWithFlags((void**) &transfer_data[i], sizeof(struct transfer_data_t), strncmp(prop.gcnArchName, "gfx9", 4) == 0 ? hipDeviceMallocUncached : hipDeviceMallocFinegrained));
     for (int j = 0; j < workgroups; j++) {
-      HIPCHECK(hipExtMallocWithFlags((void**) &buff[i*MAX_WORKGROUPS+j], 2*N*sizeof(float), strncmp(prop.gcnArchName, "gfx94", 5) == 0 ? hipDeviceMallocUncached : hipDeviceMallocFinegrained));
+      HIPCHECK(hipExtMallocWithFlags((void**) &buff[i*MAX_WORKGROUPS+j], 2*N*sizeof(float), strncmp(prop.gcnArchName, "gfx9", 4) == 0 ? hipDeviceMallocUncached : hipDeviceMallocFinegrained));
       // additional fine grained buffer for local doublecopy, only need 1 buffer (not used by remote)
-      HIPCHECK(hipExtMallocWithFlags((void**) &buff_fine[i*MAX_WORKGROUPS+j], N*sizeof(float), strncmp(prop.gcnArchName, "gfx94", 5) == 0 ? hipDeviceMallocUncached : hipDeviceMallocFinegrained));
+      HIPCHECK(hipExtMallocWithFlags((void**) &buff_fine[i*MAX_WORKGROUPS+j], N*sizeof(float), strncmp(prop.gcnArchName, "gfx9", 4) == 0 ? hipDeviceMallocUncached : hipDeviceMallocFinegrained));
       HIPCHECK(hipMalloc((void**) &buff_coarse[i*MAX_WORKGROUPS+j], 2*N*sizeof(float)));
       //randomize test data
       hipLaunchKernelGGL(initTestDataKernel,
@@ -670,7 +670,7 @@ int main(int argc,char* argv[])
       hipDeviceProp_t prop;
       HIPCHECK(hipGetDeviceProperties(&prop, i));
       double vega_gpu_rtc_freq, bw_std_dev = 0, mean_write_cycle = 0;
-      if (strncmp(prop.gcnArchName, "gfx94", 5) == 0)
+      if (strncmp(prop.gcnArchName, "gfx9", 4) == 0)
         vega_gpu_rtc_freq = 1.0E8;
       else
         vega_gpu_rtc_freq = 2.5E7;
-- 
2.41.1

