From 929438e2cbadac5ad9fb8cdb415baeb9e6d598ee Mon Sep 17 00:00:00 2001
From: Mika Laitio <lamikr@gmail.com>
Date: Mon, 20 May 2024 14:02:57 -0700
Subject: [PATCH 1/7] onnxruntime training rocm sdk builder scripts

Signed-off-by: Mika Laitio <lamikr@gmail.com>
---
 build_rocm.sh     | 31 +++++++++++++++++++++++++++++++
 install_rocm.sh   | 23 +++++++++++++++++++++++
 preconfig_rocm.sh |  7 +++++++
 3 files changed, 61 insertions(+)
 create mode 100755 build_rocm.sh
 create mode 100755 install_rocm.sh
 create mode 100755 preconfig_rocm.sh

diff --git a/build_rocm.sh b/build_rocm.sh
new file mode 100755
index 0000000000..44d7022e2e
--- /dev/null
+++ b/build_rocm.sh
@@ -0,0 +1,31 @@
+if [ -z "$1" ]; then
+    install_dir_prefix_rocm=/opt/rocm
+    echo "No rocm_root_directory_specified, using default: ${install_dir_prefix_rocm}"
+else
+    install_dir_prefix_rocm=${1}
+    echo "using rocm_root_directory specified: ${install_dir_prefix_rocm}"
+fi
+if [ -z "$2" ]; then
+    amd_target_gpu=\"gfx90a\"
+    echo "No rocm gpu specified, using default: ${amd_target_gpu}"
+else
+    amd_target_gpu="$2"
+    echo "Using specified amd rocm gpu: ${amd_target_gpu}"
+fi
+
+cmake_min_version=3.26.1
+cmake_installed_version=$(cmake --version | head -1 | cut -f3 -d" ")
+mapfile -t sorted < <(printf "%s\n" "$cmake_installed_version" "$cmake_min_version" | sort -V)
+if [[ ${sorted[0]} == "$cmake_min_version" ]]; then
+    echo "Linux distributions cmake version ok"
+    echo "    $cmake_installed_version >= $cmake_min_version"
+else
+    echo "Linux distribution version too old, using own build"
+    export PATH=${install_dir_prefix_rocm}/cmake/bin:$PATH
+fi
+
+./build.sh --config Release --enable_training --build_wheel --parallel --skip_tests  --build_shared_lib --use_rocm --rocm_home ${install_dir_prefix_rocm} --use_migraphx --migraphx_home ${install_dir_prefix_rocm} --cmake_extra_defines CMAKE_HIP_COMPILER=${install_dir_prefix_rocm}/bin/clang++ CMAKE_INSTALL_PREFIX=${install_dir_prefix_rocm} CMAKE_HIP_ARCHITECTURES=${amd_target_gpu}
+#
+#
+#./build.sh --config RelWithDebInfo --build_shared_lib --parallel --compile_no_warning_as_error --skip_submodule_sync
+#./build.sh --config RelWithDebInfo --build_shared_lib --parallel --enable_training_apis
diff --git a/install_rocm.sh b/install_rocm.sh
new file mode 100755
index 0000000000..fb10604cda
--- /dev/null
+++ b/install_rocm.sh
@@ -0,0 +1,23 @@
+unset backup_dir_python_wheel
+if [ ! -z "$1" ]; then
+    backup_dir_python_wheel=${1}
+    echo "copying pytorch vision python whl file to directory: ${backup_dir_python_wheel}"
+fi
+# if there are multiple wheel files, find the newest one and install it
+unset -v latest_wheel_file
+for cur_file in ./build/Linux/Release/dist/*.whl; do
+    [[ $cur_file -nt "$latest_wheel_file" ]] && latest_wheel_file=$cur_file
+done
+if [ ! -z "$latest_wheel_file" ]; then
+    echo "installing $latest_wheel_file"
+    pip install "$latest_wheel_file"
+    if [ ! -z "$backup_dir_python_wheel" ]; then
+        if [ ! -d "$backup_dir_python_wheel" ]; then
+            mkdir -p "$backup_dir_python_wheel"
+        fi
+        cp -f "$latest_wheel_file" "$backup_dir_python_wheel"
+    fi
+else
+    echo "Could not find pytorch vision whl file to install"
+    exit 1
+fi
diff --git a/preconfig_rocm.sh b/preconfig_rocm.sh
new file mode 100755
index 0000000000..97ab2c15d5
--- /dev/null
+++ b/preconfig_rocm.sh
@@ -0,0 +1,7 @@
+# check we are in right directory
+if [[ -f ./preconfig_rocm.sh && -f ./setup.py ]]; then
+    if [ -d ./build ]; then
+        # clean old build, python ./setup.py clean does not work in all cases
+        rm -r ./build
+    fi
+fi
-- 
2.45.2

