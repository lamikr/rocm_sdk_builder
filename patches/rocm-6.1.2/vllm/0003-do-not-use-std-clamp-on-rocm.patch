From 4ebdd0fcff7ad95eb4ee64e566786214193473d6 Mon Sep 17 00:00:00 2001
From: Mika Laitio <lamikr@gmail.com>
Date: Tue, 30 Jul 2024 12:10:43 -0700
Subject: [PATCH 3/4] do not use std::clamp on rocm

Signed-off-by: Mika Laitio <lamikr@gmail.com>
---
 .../compressed_tensors/int8_quant_kernels.cu          | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/csrc/quantization/compressed_tensors/int8_quant_kernels.cu b/csrc/quantization/compressed_tensors/int8_quant_kernels.cu
index aa9511da..abc60faf 100644
--- a/csrc/quantization/compressed_tensors/int8_quant_kernels.cu
+++ b/csrc/quantization/compressed_tensors/int8_quant_kernels.cu
@@ -13,8 +13,17 @@ static inline __device__ int8_t float_to_int8_rn(float x) {
       static_cast<float>(std::numeric_limits<int8_t>::max());
   // round
   float dst = std::nearbyint(x);
+
   // saturate
-  dst = std::clamp(dst, i8_min, i8_max);
+  // do not use std::clamp on rocm
+  // See https://github.com/pytorch/pytorch/issues/127666
+  // and https://github.com/pytorch/pytorch/issues/128253.
+  // hip-clang std::clamp __glibcxx_assert_fail host function when building on Fedora40/gcc14.
+  // The following replaces std::clamp(qvalue, qmin, qmax) and is a viable solution for
+  // both CUDA and ROCm since std::clamp and this replacement generates the same PTX.
+  // Using #ifdef USE_ROCM to differentiate caused Windows build failures.
+  // The replacement should generate the same PTX as std::clamp. See https://godbolt.org/z/Wde9KW3v4
+  dst = (dst < i8_min) ? i8_min : (i8_max < dst) ? i8_max : dst;
   return static_cast<int8_t>(dst);
 #else
   // CUDA path
-- 
2.46.0

