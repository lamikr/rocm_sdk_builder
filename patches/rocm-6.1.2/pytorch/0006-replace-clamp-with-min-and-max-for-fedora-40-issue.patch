From a6c2edaae6571560cbbd5f61661fc08e88c713d6 Mon Sep 17 00:00:00 2001
From: Mika Laitio <lamikr@gmail.com>
Date: Fri, 31 May 2024 18:35:12 -0700
Subject: [PATCH 6/6] replace clamp with min and max for fedora 40 issue

Fedora 40/gcc 14 throws following error during build time
for clamp function usage during pytorch build time.

In file included from /usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/algorithm:61:
/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_algo.h:3625:7: error: reference to host function '__glibcxx_assert_fail' in host device function
3625 | __glibcxx_assert(!(__hi < __lo));
| ^
/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/x86_64-redhat-linux/bits/c++config.h:2453:7: note: expanded from macro '__glibcxx_assert'
2453 | std::__glibcxx_assert_fail();
| ^
pytorch/aten/src/ATen/native/hip/IndexKernel.hip:254:21: note: called by 'operator()'
254 | qvalue = std::clamp(qvalue, qmin, qmax);

https://github.com/pytorch/pytorch/issues/127666
https://github.com/lamikr/rocm_sdk_builder/issues/12

Signed-off-by: Mika Laitio <lamikr@gmail.com>
---
 aten/src/ATen/native/cuda/IndexKernel.cu | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/aten/src/ATen/native/cuda/IndexKernel.cu b/aten/src/ATen/native/cuda/IndexKernel.cu
index 5682ba2757..862bcb9614 100644
--- a/aten/src/ATen/native/cuda/IndexKernel.cu
+++ b/aten/src/ATen/native/cuda/IndexKernel.cu
@@ -249,7 +249,9 @@ void index_put_kernel_quantized_cuda(TensorIterator& iter, const IntArrayRef ind
 
     gpu_index_kernel(iter, index_size, index_stride, [inv_scale, zero_point, qmin, qmax]C10_DEVICE(char* const out_data, const char* const in_data, const int64_t offset) {
       int64_t qvalue = static_cast<int64_t>(zero_point + nearbyintf(*(float*)in_data * inv_scale));
-      qvalue = std::clamp(qvalue, qmin, qmax);
+      int64_t new_max = std::max<int64_t>(qmin, qvalue);
+      qvalue = std::min<int64_t>(qmax, new_max);
+      //qvalue = std::clamp(qvalue, qmin, qmax);
       *(scalar_t*)(out_data + offset) = static_cast<scalar_t>(qvalue);
     });
   });
-- 
2.45.2

