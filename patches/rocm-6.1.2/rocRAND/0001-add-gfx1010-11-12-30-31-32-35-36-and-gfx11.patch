From 8443ded95c749526d725fb8461240ab14efa3eb0 Mon Sep 17 00:00:00 2001
From: Mika Laitio <lamikr@gmail.com>
Date: Fri, 5 Jan 2024 10:43:18 +0200
Subject: [PATCH] add gfx1010/11/12/30/31/32/35/36 and gfx11

Signed-off-by: Mika Laitio <lamikr@gmail.com>
---
 CMakeLists.txt                           |  2 +-
 library/include/rocrand/rocrand_common.h | 13 ++++++++++++-
 rmake.py                                 |  4 ++--
 3 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 80d0ad0..958985e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -91,7 +91,7 @@ endif()
 set( AMDGPU_TARGETS "all" CACHE STRING "Compile for which gpu architectures?")
 # Set the AMDGPU_TARGETS
 rocm_check_target_ids(DEFAULT_AMDGPU_TARGETS
-    TARGETS "gfx803;gfx900:xnack-;gfx906:xnack-;gfx908:xnack-;gfx90a:xnack-;gfx90a:xnack+;gfx940;gfx941;gfx942;gfx1030;gfx1100;gfx1101;gfx1102"
+    TARGETS "gfx803;gfx900:xnack-;gfx906:xnack-;gfx908:xnack-;gfx90a:xnack-;gfx90a:xnack+;gfx940;gfx941;gfx942;gfx1030;gfx1035;gfx1100;gfx1101;gfx1102"
 )
 if (AMDGPU_TARGETS)
     if( AMDGPU_TARGETS STREQUAL "all" )
diff --git a/library/include/rocrand/rocrand_common.h b/library/include/rocrand/rocrand_common.h
index 623aa4b..84b0400 100644
--- a/library/include/rocrand/rocrand_common.h
+++ b/library/include/rocrand/rocrand_common.h
@@ -63,7 +63,18 @@ namespace detail {
       defined(__gfx906__) || \
       defined(__gfx908__) || \
       defined(__gfx909__) || \
-      defined(__gfx1030__) )
+      defined(__gfx1010__) || \
+      defined(__gfx1011__) || \
+      defined(__gfx1012__) || \
+      defined(__gfx1030__) || \
+      defined(__gfx1031__) || \
+      defined(__gfx1032__) || \
+      defined(__gfx1035__) || \
+      defined(__gfx1036__) || \
+      defined(__gfx1100__) || \
+      defined(__gfx1101__) || \
+      defined(__gfx1102__) || \
+      defined(__gfx1103__) )
   #if !defined(ROCRAND_ENABLE_INLINE_ASM)
     #define ROCRAND_ENABLE_INLINE_ASM
   #endif
diff --git a/rmake.py b/rmake.py
index 6b7dcca..5106b0d 100644
--- a/rmake.py
+++ b/rmake.py
@@ -37,8 +37,8 @@ def parse_args():
                         help='Install after build (default: False)')
     parser.add_argument(      '--cmake-darg', required=False, dest='cmake_dargs', action='append', default=[],
                         help='List of additional cmake defines for builds (e.g. CMAKE_CXX_COMPILER_LAUNCHER=ccache)')
-    parser.add_argument('-a', '--architecture', dest='gpu_architecture', required=False, default="gfx906;gfx1030;gfx1100;gfx1101;gfx1102", #:sramecc+:xnack-" ) #gfx1030" ) #gfx906" ) # gfx1030" )
-                        help='Set GPU architectures, e.g. all, gfx000, gfx803, gfx906:xnack-;gfx1030;gfx1100 (optional, default: all)')
+    parser.add_argument('-a', '--architecture', dest='gpu_architecture', required=False, default="gfx906;gfx1030;gfx1035;gfx1100;gfx1101;gfx1102", #:sramecc+:xnack-" ) #gfx1030" ) #gfx906" ) # gfx1030" )
+                        help='Set GPU architectures, e.g. all, gfx000, gfx803, gfx906:xnack-;gfx1030;gfx1035;gfx1100 (optional, default: all)')
     parser.add_argument('-v', '--verbose', required=False, default=False, action='store_true',
                         help='Verbose build (default: False)')
     return parser.parse_args()
-- 
2.41.1

