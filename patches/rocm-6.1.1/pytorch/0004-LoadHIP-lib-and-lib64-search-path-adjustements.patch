From 268f465c7d2b4123aeb50c09c0d92e3f6f8f4478 Mon Sep 17 00:00:00 2001
From: Mika Laitio <lamikr@pilppa.org>
Date: Fri, 10 May 2024 11:11:47 -0700
Subject: [PATCH 4/7] LoadHIP lib and lib64 search path adjustements

- search both lib and lib64 directories
  (note some libs still installed to lib-dir
  in rocm_sdk_builder_600)
- set MAGMA_HOME by default to rocm_sdk rootdir
  (rocm_sdk_builder builds magma to sdk root dir)

Signed-off-by: Mika Laitio <lamikr@pilppa.org>
---
 cmake/Dependencies.cmake   |  5 +++--
 cmake/public/LoadHIP.cmake | 44 +++++++++++++++++++-------------------
 2 files changed, 25 insertions(+), 24 deletions(-)

diff --git a/cmake/Dependencies.cmake b/cmake/Dependencies.cmake
index 8befd5b8294..e8c7a97b83e 100644
--- a/cmake/Dependencies.cmake
+++ b/cmake/Dependencies.cmake
@@ -1334,8 +1334,9 @@ if(USE_ROCM)
     else()
       message(STATUS "Disabling Kernel Assert for ROCm")
     endif()
-
-    include(${CMAKE_CURRENT_LIST_DIR}/External/aotriton.cmake)
+    if(USE_FLASH_ATTENTION)
+      include(${CMAKE_CURRENT_LIST_DIR}/External/aotriton.cmake)
+    endif()
     if(USE_CUDA)
       caffe2_update_option(USE_MEM_EFF_ATTENTION OFF)
     endif()
diff --git a/cmake/public/LoadHIP.cmake b/cmake/public/LoadHIP.cmake
index 0f7a61cf141..dfa4bab4df2 100644
--- a/cmake/public/LoadHIP.cmake
+++ b/cmake/public/LoadHIP.cmake
@@ -17,8 +17,8 @@ endif()
 
 # MAGMA_HOME
 if(NOT DEFINED ENV{MAGMA_HOME})
-  set(MAGMA_HOME ${ROCM_PATH}/magma)
-  set(ENV{MAGMA_HOME} ${ROCM_PATH}/magma)
+   set(MAGMA_HOME ${ROCM_PATH})
+   set(ENV{MAGMA_HOME} ${ROCM_PATH})
 else()
   set(MAGMA_HOME $ENV{MAGMA_HOME})
 endif()
@@ -139,23 +139,23 @@ if(HIP_FOUND)
   ### Remove setting of Flags when FindHIP.CMake PR #558 is accepted.###
 
   set(hip_DIR ${ROCM_PATH}/lib/cmake/hip)
-  set(hsa-runtime64_DIR ${ROCM_PATH}/lib/cmake/hsa-runtime64)
-  set(AMDDeviceLibs_DIR ${ROCM_PATH}/lib/cmake/AMDDeviceLibs)
-  set(amd_comgr_DIR ${ROCM_PATH}/lib/cmake/amd_comgr)
-  set(rocrand_DIR ${ROCM_PATH}/lib/cmake/rocrand)
-  set(hiprand_DIR ${ROCM_PATH}/lib/cmake/hiprand)
-  set(rocblas_DIR ${ROCM_PATH}/lib/cmake/rocblas)
-  set(hipblas_DIR ${ROCM_PATH}/lib/cmake/hipblas)
-  set(hipblaslt_DIR ${ROCM_PATH}/lib/cmake/hipblaslt)
-  set(miopen_DIR ${ROCM_PATH}/lib/cmake/miopen)
-  set(rocfft_DIR ${ROCM_PATH}/lib/cmake/rocfft)
-  set(hipfft_DIR ${ROCM_PATH}/lib/cmake/hipfft)
-  set(hipsparse_DIR ${ROCM_PATH}/lib/cmake/hipsparse)
-  set(rccl_DIR ${ROCM_PATH}/lib/cmake/rccl)
-  set(rocprim_DIR ${ROCM_PATH}/lib/cmake/rocprim)
+  set(hsa-runtime64_DIR ${ROCM_PATH}/lib64/cmake/hsa-runtime64)
+  set(AMDDeviceLibs_DIR ${ROCM_PATH}/lib64/cmake/AMDDeviceLibs)
+  set(amd_comgr_DIR ${ROCM_PATH}/lib64/cmake/amd_comgr)
+  set(rocrand_DIR ${ROCM_PATH}/lib64/cmake/rocrand)
+  set(hiprand_DIR ${ROCM_PATH}/lib64/cmake/hiprand)
+  set(rocblas_DIR ${ROCM_PATH}/lib64/cmake/rocblas)
+  set(hipblas_DIR ${ROCM_PATH}/lib64/cmake/hipblas)
+  set(hipblaslt_DIR ${ROCM_PATH}/lib64/cmake/hipblaslt)
+  set(miopen_DIR ${ROCM_PATH}/lib64/cmake/miopen)
+  set(rocfft_DIR ${ROCM_PATH}/lib64/cmake/rocfft)
+  set(hipfft_DIR ${ROCM_PATH}/lib64/cmake/hipfft)
+  set(hipsparse_DIR ${ROCM_PATH}/lib64/cmake/hipsparse)
+  set(rccl_DIR ${ROCM_PATH}/lib64/cmake/rccl)
+  set(rocprim_DIR ${ROCM_PATH}/lib64/cmake/rocprim)
   set(hipcub_DIR ${ROCM_PATH}/lib/cmake/hipcub)
   set(rocthrust_DIR ${ROCM_PATH}/lib/cmake/rocthrust)
-  set(hipsolver_DIR ${ROCM_PATH}/lib/cmake/hipsolver)
+  set(hipsolver_DIR ${ROCM_PATH}/lib64/cmake/hipsolver)
 
 
   find_package_and_print_version(hip REQUIRED)
@@ -182,24 +182,24 @@ if(HIP_FOUND)
   find_package_and_print_version(hipsolver REQUIRED)
 
 
-  find_library(PYTORCH_HIP_LIBRARIES amdhip64 HINTS ${ROCM_PATH}/lib)
+  find_library(PYTORCH_HIP_LIBRARIES amdhip64 HINTS ${ROCM_PATH}/lib ${ROCM_PATH}/lib64)
   # TODO: miopen_LIBRARIES should return fullpath to the library file,
   # however currently it's just the lib name
   if(TARGET ${miopen_LIBRARIES})
     set(PYTORCH_MIOPEN_LIBRARIES ${miopen_LIBRARIES})
   else()
-    find_library(PYTORCH_MIOPEN_LIBRARIES ${miopen_LIBRARIES} HINTS ${ROCM_PATH}/lib)
+    find_library(PYTORCH_MIOPEN_LIBRARIES ${miopen_LIBRARIES} HINTS ${ROCM_PATH}/lib ${ROCM_PATH}/lib64)
   endif()
   # TODO: rccl_LIBRARIES should return fullpath to the library file,
   # however currently it's just the lib name
   if(TARGET ${rccl_LIBRARIES})
     set(PYTORCH_RCCL_LIBRARIES ${rccl_LIBRARIES})
   else()
-    find_library(PYTORCH_RCCL_LIBRARIES ${rccl_LIBRARIES} HINTS ${ROCM_PATH}/lib)
+    find_library(PYTORCH_RCCL_LIBRARIES ${rccl_LIBRARIES} HINTS ${ROCM_PATH}/lib ${ROCM_PATH}/lib64)
   endif()
-  find_library(ROCM_HIPRTC_LIB hiprtc HINTS ${ROCM_PATH}/lib)
+  find_library(ROCM_HIPRTC_LIB hiprtc HINTS ${ROCM_PATH}/lib ${ROCM_PATH}/lib64)
   # roctx is part of roctracer
-  find_library(ROCM_ROCTX_LIB roctx64 HINTS ${ROCM_PATH}/lib)
+  find_library(ROCM_ROCTX_LIB roctx64 HINTS ${ROCM_PATH}/lib ${ROCM_PATH}/lib64)
 
   if(ROCM_VERSION_DEV VERSION_GREATER_EQUAL "5.7.0")
     # check whether hipblaslt is using its own datatype
-- 
2.45.1

