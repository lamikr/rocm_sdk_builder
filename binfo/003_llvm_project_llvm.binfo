BINFO_APP_NAME=llvm-project
BINFO_APP_SRC_TOPDIR_BASENAME=${BINFO_APP_NAME}
BINFO_APP_SRC_SUBDIR_BASENAME=llvm
BINFO_APP_SRC_CLONE_DIR="${SDK_SRC_ROOT_DIR}/${BINFO_APP_SRC_TOPDIR_BASENAME}"
BINFO_APP_SRC_DIR="${SDK_SRC_ROOT_DIR}/${BINFO_APP_SRC_TOPDIR_BASENAME}/${BINFO_APP_SRC_SUBDIR_BASENAME}"
BINFO_APP_UPSTREAM_REPO_URL=https://github.com/ROCm/llvm-project
#use default git tag
#BINFO_APP_UPSTREAM_REPO_VERSION_TAG=rocm-5.7.1

CFG_TEMP1=-DLLVM_TARGETS_TO_BUILD="AMDGPU;X86"
CFG_TEMP2=-DLLVM_ENABLE_PROJECTS="llvm;lld;clang;mlir;compiler-rt;clang-tools-extra"

BINFO_APP_CMAKE_CFG="-DCMAKE_INSTALL_PREFIX=${INSTALL_DIR_PREFIX_HIP_LLVM}"
BINFO_APP_CMAKE_CFG="${BINFO_APP_CMAKE_CFG} -DLLVM_ENABLE_ASSERTIONS=ON"
BINFO_APP_CMAKE_CFG="${BINFO_APP_CMAKE_CFG} ${CFG_TEMP1}"
BINFO_APP_CMAKE_CFG="${BINFO_APP_CMAKE_CFG} ${CFG_TEMP2}"
BINFO_APP_CMAKE_CFG="${BINFO_APP_CMAKE_CFG} -DCMAKE_Fortran_COMPILER=gfortran"
BINFO_APP_CMAKE_CFG="${BINFO_APP_CMAKE_CFG} -DCLANG_BUILD_TOOLS=ON"
BINFO_APP_CMAKE_CFG="${BINFO_APP_CMAKE_CFG} -DLLVM_BUILD_LLVM_DYLIB=ON"
#BINFO_APP_CMAKE_CFG="${BINFO_APP_CMAKE_CFG} -DCLANG_DEFAULT_CXX_STDLIB=libstdc++"
BINFO_APP_CMAKE_CFG="${BINFO_APP_CMAKE_CFG} -DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-mageia-linux"
BINFO_APP_CMAKE_CFG="${BINFO_APP_CMAKE_CFG} ${BINFO_APP_SRC_DIR}"

# first decrease the CPU count used for building
# to avoid compile/link processes being killed because running out of memory
# on systems having less than 64GB of ram.
BINFO_APP_PRE_CONFIG_CMD_EXECUTE_ALWAYS=1
BINFO_APP_PRE_CONFIG_CMD_ARRAY=(
    "export BINFO_BUILD_CPU_COUNT=\${BUILD_CPU_COUNT_MODERATE}"
)

# and then restore the default CPU count for next app build
#BINFO_APP_POST_INSTALL_CMD_EXECUTE_ALWAYS=1
BINFO_APP_POST_INSTALL_CMD_ARRAY=(
    "export BINFO_BUILD_CPU_COUNT=\${BUILD_CPU_COUNT_DEFAULT}"
    "install -Dm755 ${BINFO_APP_BUILD_DIR}/bin/not ${INSTALL_DIR_PREFIX_HIP_LLVM}/bin/not"
    "install -Dm755 ${BINFO_APP_BUILD_DIR}/bin/llvm-lit ${INSTALL_DIR_PREFIX_HIP_LLVM}/bin/llvm-lit"
    "install -Dm755 ${BINFO_APP_BUILD_DIR}/bin/FileCheck ${INSTALL_DIR_PREFIX_HIP_LLVM}/bin/FileCheck"
)
# "export CXX=\${SDK_CXX_COMPILER_HIP_CLANG}"
